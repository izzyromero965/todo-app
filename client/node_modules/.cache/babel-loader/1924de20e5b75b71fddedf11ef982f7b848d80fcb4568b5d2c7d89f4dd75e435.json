{"ast":null,"code":"var _jsxFileName = \"/Users/israelromero/todoApp/client/src/Components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport { Input, Button, Card, Box } from \"@mui/material\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useCreateTodo } from \"../graphql/hooks/todoHooks\";\nimport { useUserContext } from \"../Providers/UserProvider\";\nimport styled from \"@emotion/styled\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TITLE_INPUT_PLACEHOLDER = \"Create a new task...\";\nconst TITLE_INPUT_NAME = \"title\";\nexport default function TodoForm() {\n  _s();\n  const {\n    createTodo\n  } = useCreateTodo();\n  const {\n    user\n  } = useUserContext();\n  const [titleInputValue, setTitleInputValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n          name: TITLE_INPUT_NAME,\n          id: \"title-input\",\n          placeholder: TITLE_INPUT_PLACEHOLDER,\n          value: titleInputValue,\n          onChange: e => setTitleInputValue(e.target.value),\n          required: true,\n          disableUnderline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleSubmit({\n            titleInputValue,\n            createTodo,\n            userEmail: user === null || user === void 0 ? void 0 : user.email,\n            setTitleInputValue\n          }),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"RDjEbZQ13s2YWTLlhsYKG/OMZ6s=\", false, function () {\n  return [useCreateTodo, useUserContext];\n});\n_c = TodoForm;\nasync function handleSubmit({\n  titleInputValue,\n  createTodo,\n  userEmail,\n  setTitleInputValue\n}) {\n  await createTodo({\n    title: titleInputValue,\n    userEmail\n  });\n  setTitleInputValue(\"\");\n}\nconst TitleInput = styled(Input)({\n  color: \"white\",\n  margin: \"0.5rem\",\n  border: \"none\"\n});\n_c2 = TitleInput;\nconst InputContainer = styled(Card)({\n  backgroundColor: \"rgb(33,41,54)\",\n  height: \"5vh\",\n  width: \"60vw\",\n  display: \"flex\",\n  justifyContent: \"space-between\"\n});\n_c3 = InputContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TodoForm\");\n$RefreshReg$(_c2, \"TitleInput\");\n$RefreshReg$(_c3, \"InputContainer\");","map":{"version":3,"names":["Input","Button","Card","Box","FormControl","useCreateTodo","useUserContext","styled","useState","jsxDEV","_jsxDEV","TITLE_INPUT_PLACEHOLDER","TITLE_INPUT_NAME","TodoForm","_s","createTodo","user","titleInputValue","setTitleInputValue","children","InputContainer","TitleInput","name","id","placeholder","value","onChange","e","target","required","disableUnderline","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleSubmit","userEmail","email","_c","title","color","margin","border","_c2","backgroundColor","height","width","display","justifyContent","_c3","$RefreshReg$"],"sources":["/Users/israelromero/todoApp/client/src/Components/TodoForm.js"],"sourcesContent":["import { Input, Button, Card, Box } from \"@mui/material\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useCreateTodo } from \"../graphql/hooks/todoHooks\";\nimport { useUserContext } from \"../Providers/UserProvider\";\nimport styled from \"@emotion/styled\";\nimport { useState } from \"react\";\n\nconst TITLE_INPUT_PLACEHOLDER = \"Create a new task...\";\nconst TITLE_INPUT_NAME = \"title\";\n\nexport default function TodoForm() {\n  const { createTodo } = useCreateTodo();\n  const { user } = useUserContext();\n  const [titleInputValue, setTitleInputValue] = useState(\"\");\n\n  return (\n    <Box>\n      <FormControl>\n        <InputContainer>\n          <TitleInput\n            name={TITLE_INPUT_NAME}\n            id=\"title-input\"\n            placeholder={TITLE_INPUT_PLACEHOLDER}\n            value={titleInputValue}\n            onChange={(e) => setTitleInputValue(e.target.value)}\n            required\n            disableUnderline\n          />\n          <Button\n            onClick={() =>\n              handleSubmit({\n                titleInputValue,\n                createTodo,\n                userEmail: user?.email,\n                setTitleInputValue,\n              })\n            }\n          >\n            Add\n          </Button>\n        </InputContainer>\n      </FormControl>\n    </Box>\n  );\n}\nasync function handleSubmit({\n  titleInputValue,\n  createTodo,\n  userEmail,\n  setTitleInputValue,\n}) {\n  await createTodo({\n    title: titleInputValue,\n    userEmail,\n  });\n\n  setTitleInputValue(\"\");\n}\n\nconst TitleInput = styled(Input)({\n  color: \"white\",\n  margin: \"0.5rem\",\n  border: \"none\",\n});\n\nconst InputContainer = styled(Card)({\n  backgroundColor: \"rgb(33,41,54)\",\n  height: \"5vh\",\n  width: \"60vw\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}