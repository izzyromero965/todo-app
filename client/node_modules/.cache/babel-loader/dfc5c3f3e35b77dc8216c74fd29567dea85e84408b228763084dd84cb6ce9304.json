{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_TODOS } from \"../queries/Todo\";\nimport { CREATE_TODO, DELETE_TODO, UPDATE_TODO } from \"../mutations/Todo\";\nexport const useTodos = () => {\n  _s();\n  const {\n    error,\n    loading: isLoading,\n    data\n  } = useQuery(GET_TODOS, {\n    fetchPolicy: \"cache-and-network\"\n  });\n  const todos = data === null || data === void 0 ? void 0 : data.getTodos;\n  return {\n    error,\n    todos,\n    isLoading\n  };\n};\n_s(useTodos, \"Y7e/4WBUglaZxQzpPnwNVMojz3Q=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateTodo = () => {\n  _s2();\n  const [createTodoMutation, {\n    error,\n    loading: isLoading\n  }] = useMutation(CREATE_TODO);\n  const createTodo = ({\n    title,\n    details,\n    date\n  }) => {\n    createTodoMutation({\n      variables: {\n        title: title,\n        details: details,\n        date: date\n      },\n      update(cache, {\n        data\n      }) {\n        updateNewTodoCache({\n          cache,\n          newTodo: data.createTodo\n        });\n      }\n    });\n  };\n  return {\n    createTodo,\n    error,\n    isLoading\n  };\n};\n_s2(useCreateTodo, \"DW2A8Dy43nVhMdZN1kgDJgzAoq0=\", false, function () {\n  return [useMutation];\n});\nexport const useUpdateTodo = () => {\n  _s3();\n  const [updateTodoMutation, {\n    error,\n    loading: isLoading\n  }] = useMutation(UPDATE_TODO);\n  const updateTodo = ({\n    id,\n    title,\n    details,\n    date\n  }) => {\n    updateTodoMutation({\n      variables: {\n        id: id,\n        title: title,\n        details: details,\n        date: date\n      },\n      update(cache, {\n        data\n      }) {\n        updateTodoCache({\n          cache,\n          newTodo: data.updateTodo\n        });\n      }\n    });\n  };\n  return {\n    updateTodo,\n    error,\n    isLoading\n  };\n};\n_s3(useUpdateTodo, \"XtDbOceoNL1i5kkZHKKdc4rvdMo=\", false, function () {\n  return [useMutation];\n});\nexport const useDeleteTodo = () => {\n  _s4();\n  const [deleteTodoMutation, {\n    error,\n    loading: isLoading\n  }] = useMutation(DELETE_TODO);\n  const deleteTodo = ({\n    id\n  }) => {\n    deleteTodoMutation({\n      variables: {\n        id: id\n      },\n      update(cache, {\n        data\n      }) {\n        updateDeleteTodoCache({\n          cache,\n          id\n        });\n      }\n    });\n  };\n  return {\n    deleteTodo,\n    error,\n    isLoading\n  };\n};\n_s4(useDeleteTodo, \"v/Z89l3lt78+796ylxcNe7q+B3o=\", false, function () {\n  return [useMutation];\n});\nfunction updateNewTodoCache({\n  cache,\n  newTodo\n}) {\n  const {\n    getTodos\n  } = cache.readQuery({\n    query: GET_TODOS\n  });\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: {\n      getTodos: [...getTodos, newTodo]\n    }\n  });\n}\nfunction updateTodoCache({\n  cache,\n  newTodo\n}) {\n  const {\n    getTodos\n  } = cache.readQuery({\n    query: GET_TODOS\n  });\n  const updatedTodos = getTodos.map(todo => {\n    if (todo.id === newTodo.id) {\n      return newTodo;\n    }\n    return todo;\n  });\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: {\n      getTodos: updatedTodos\n    }\n  });\n}\nfunction updateDeleteTodoCache({\n  cache,\n  id\n}) {\n  const {\n    getTodos\n  } = cache.readQuery({\n    query: GET_TODOS\n  });\n  const updatedTodos = getTodos.filter(todo => todo.id !== id);\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: {\n      getTodos: updatedTodos\n    }\n  });\n}","map":{"version":3,"names":["useMutation","useQuery","GET_TODOS","CREATE_TODO","DELETE_TODO","UPDATE_TODO","useTodos","_s","error","loading","isLoading","data","fetchPolicy","todos","getTodos","useCreateTodo","_s2","createTodoMutation","createTodo","title","details","date","variables","update","cache","updateNewTodoCache","newTodo","useUpdateTodo","_s3","updateTodoMutation","updateTodo","id","updateTodoCache","useDeleteTodo","_s4","deleteTodoMutation","deleteTodo","updateDeleteTodoCache","readQuery","query","writeQuery","updatedTodos","map","todo","filter"],"sources":["/Users/israelromero/todoApp/client/src/graphql/hooks/todoHooks.js"],"sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_TODOS } from \"../queries/Todo\";\nimport { CREATE_TODO, DELETE_TODO, UPDATE_TODO } from \"../mutations/Todo\";\n\nexport const useTodos = () => {\n  const {\n    error,\n    loading: isLoading,\n    data,\n  } = useQuery(GET_TODOS, {\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const todos = data?.getTodos;\n\n  return { error, todos, isLoading };\n};\n\nexport const useCreateTodo = () => {\n  const [createTodoMutation, { error, loading: isLoading }] =\n    useMutation(CREATE_TODO);\n\n  const createTodo = ({ title, details, date }) => {\n    createTodoMutation({\n      variables: {\n        title: title,\n        details: details,\n        date: date,\n      },\n      update(cache, { data }) {\n        updateNewTodoCache({ cache, newTodo: data.createTodo });\n      },\n    });\n  };\n\n  return { createTodo, error, isLoading };\n};\n\nexport const useUpdateTodo = () => {\n  const [updateTodoMutation, { error, loading: isLoading }] =\n    useMutation(UPDATE_TODO);\n\n  const updateTodo = ({ id, title, details, date }) => {\n    updateTodoMutation({\n      variables: {\n        id: id,\n        title: title,\n        details: details,\n        date: date,\n      },\n      update(cache, { data }) {\n        updateTodoCache({ cache, newTodo: data.updateTodo });\n      },\n    });\n  };\n\n  return { updateTodo, error, isLoading };\n};\n\nexport const useDeleteTodo = () => {\n  const [deleteTodoMutation, { error, loading: isLoading }] =\n    useMutation(DELETE_TODO);\n\n  const deleteTodo = ({ id }) => {\n    deleteTodoMutation({\n      variables: {\n        id: id,\n      },\n      update(cache, { data }) {\n        updateDeleteTodoCache({ cache, id });\n      },\n    });\n  };\n\n  return { deleteTodo, error, isLoading };\n};\n\nfunction updateNewTodoCache({ cache, newTodo }) {\n  const { getTodos } = cache.readQuery({ query: GET_TODOS });\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: { getTodos: [...getTodos, newTodo] },\n  });\n}\n\nfunction updateTodoCache({ cache, newTodo }) {\n  const { getTodos } = cache.readQuery({ query: GET_TODOS });\n  const updatedTodos = getTodos.map((todo) => {\n    if (todo.id === newTodo.id) {\n      return newTodo;\n    }\n    return todo;\n  });\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: { getTodos: updatedTodos },\n  });\n}\n\nfunction updateDeleteTodoCache({ cache, id }) {\n  const { getTodos } = cache.readQuery({ query: GET_TODOS });\n  const updatedTodos = getTodos.filter((todo) => todo.id !== id);\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: { getTodos: updatedTodos },\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}