{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_TODOS } from \"../queries/Todo\";\nimport { CREATE_TODO } from \"../mutations/Todo\";\nexport const useTodos = () => {\n  _s();\n  const {\n    error,\n    loading: isLoading,\n    data\n  } = useQuery(GET_TODOS);\n  const todos = data === null || data === void 0 ? void 0 : data.getTodos;\n  return {\n    error,\n    todos,\n    isLoading\n  };\n};\n_s(useTodos, \"Lmxy/eVHnENfktB+LTlYY9wnKNg=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateTodo = () => {\n  _s2();\n  const [createTodoMutation, {\n    error,\n    loading: isLoading\n  }] = useMutation(CREATE_TODO);\n  const createTodo = newTodo => {\n    createTodoMutation({\n      variables: {\n        title: newTodo.title,\n        details: newTodo.details,\n        date: newTodo.date\n      },\n      update(cache, {\n        data\n      }) {\n        updateTodoCache({\n          cache,\n          newTodo: data.createTodo\n        });\n      }\n    });\n  };\n};\n_s2(useCreateTodo, \"DW2A8Dy43nVhMdZN1kgDJgzAoq0=\", false, function () {\n  return [useMutation];\n});\nfunction updateTodoCache({\n  cache,\n  newTodo\n}) {\n  const {\n    getTodos\n  } = cache.readQuery({\n    query: GET_TODOS\n  });\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: {\n      getTodos: [update, ...getTodos]\n    }\n  });\n}","map":{"version":3,"names":["useMutation","useQuery","GET_TODOS","CREATE_TODO","useTodos","_s","error","loading","isLoading","data","todos","getTodos","useCreateTodo","_s2","createTodoMutation","createTodo","newTodo","variables","title","details","date","update","cache","updateTodoCache","readQuery","query","writeQuery"],"sources":["/Users/israelromero/todoApp/client/src/graphql/hooks/todoHooks.js"],"sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_TODOS } from \"../queries/Todo\";\nimport { CREATE_TODO } from \"../mutations/Todo\";\n\nexport const useTodos = () => {\n  const { error, loading: isLoading, data } = useQuery(GET_TODOS);\n\n  const todos = data?.getTodos;\n\n  return { error, todos, isLoading };\n};\n\nexport const useCreateTodo = () => {\n  const [createTodoMutation, { error, loading: isLoading }] =\n    useMutation(CREATE_TODO);\n\n  const createTodo = (newTodo) => {\n    createTodoMutation({\n      variables: {\n        title: newTodo.title,\n        details: newTodo.details,\n        date: newTodo.date,\n      },\n      update(cache, { data }) {\n        updateTodoCache({ cache, newTodo: data.createTodo });\n      },\n    });\n  };\n};\n\nfunction updateTodoCache({ cache, newTodo }) {\n  const { getTodos } = cache.readQuery({ query: GET_TODOS });\n  cache.writeQuery({\n    query: GET_TODOS,\n    data: { getTodos: [update, ...getTodos] },\n  });\n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,gBAAgB;AACtD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,mBAAmB;AAE/C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,KAAK;IAAEC,OAAO,EAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACC,SAAS,CAAC;EAE/D,MAAMQ,KAAK,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,QAAQ;EAE5B,OAAO;IAAEL,KAAK;IAAEI,KAAK;IAAEF;EAAU,CAAC;AACpC,CAAC;AAACH,EAAA,CANWD,QAAQ;EAAA,QACyBH,QAAQ;AAAA;AAOtD,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAM,CAACC,kBAAkB,EAAE;IAAER,KAAK;IAAEC,OAAO,EAAEC;EAAU,CAAC,CAAC,GACvDR,WAAW,CAACG,WAAW,CAAC;EAE1B,MAAMY,UAAU,GAAIC,OAAO,IAAK;IAC9BF,kBAAkB,CAAC;MACjBG,SAAS,EAAE;QACTC,KAAK,EAAEF,OAAO,CAACE,KAAK;QACpBC,OAAO,EAAEH,OAAO,CAACG,OAAO;QACxBC,IAAI,EAAEJ,OAAO,CAACI;MAChB,CAAC;MACDC,MAAMA,CAACC,KAAK,EAAE;QAAEb;MAAK,CAAC,EAAE;QACtBc,eAAe,CAAC;UAAED,KAAK;UAAEN,OAAO,EAAEP,IAAI,CAACM;QAAW,CAAC,CAAC;MACtD;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAACF,GAAA,CAhBWD,aAAa;EAAA,QAEtBZ,WAAW;AAAA;AAgBf,SAASuB,eAAeA,CAAC;EAAED,KAAK;EAAEN;AAAQ,CAAC,EAAE;EAC3C,MAAM;IAAEL;EAAS,CAAC,GAAGW,KAAK,CAACE,SAAS,CAAC;IAAEC,KAAK,EAAEvB;EAAU,CAAC,CAAC;EAC1DoB,KAAK,CAACI,UAAU,CAAC;IACfD,KAAK,EAAEvB,SAAS;IAChBO,IAAI,EAAE;MAAEE,QAAQ,EAAE,CAACU,MAAM,EAAE,GAAGV,QAAQ;IAAE;EAC1C,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}