{"ast":null,"code":"var _s = $RefreshSig$();\nimport { makeVar, useReactiveVar } from \"@apollo/client\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useEffect, useState } from \"react\";\nconst tokenVar = makeVar();\nlet isAlreadyGettingToken = false;\nexport function useAuth() {\n  _s();\n  const {\n    isAuthenticated: isAuthenticatedAuth0,\n    getAccessTokenSilently,\n    isLoading: isAuthLoading\n  } = useAuth0();\n  console.log(isAuthenticatedAuth0, isAuthLoading, \"THIS IS BOTH\");\n  const token = useReactiveVar(tokenVar);\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (isAuthenticatedAuth0) {\n      getAndSetAccessToken({\n        getAccessTokenSilently,\n        setError\n      });\n    }\n  }, [isAuthenticatedAuth0, getAccessTokenSilently]);\n  const isAuthenticated = isAuthenticatedAuth0 && !!token;\n  const isTokenLoading = !isAuthenticated && isAuthenticatedAuth0;\n  const isLoading = isAuthLoading || isTokenLoading;\n  return {\n    token,\n    error,\n    isAuthenticated,\n    hasBeenAuthenticated: isAuthenticatedAuth0,\n    isLoading\n  };\n}\n_s(useAuth, \"nsxpIcQ6i85GwTG25EGIfz20T5A=\", false, function () {\n  return [useAuth0, useReactiveVar];\n});\nasync function getAndSetAccessToken({\n  getAccessTokenSilently,\n  setError\n}) {\n  if (isAlreadyGettingToken) return;\n  isAlreadyGettingToken = true;\n  try {\n    const accessToken = await getAccessTokenSilently();\n    tokenVar(accessToken);\n  } catch (e) {\n    setError(e);\n  } finally {\n    isAlreadyGettingToken = false;\n  }\n}","map":{"version":3,"names":["makeVar","useReactiveVar","useAuth0","useEffect","useState","tokenVar","isAlreadyGettingToken","useAuth","_s","isAuthenticated","isAuthenticatedAuth0","getAccessTokenSilently","isLoading","isAuthLoading","console","log","token","error","setError","getAndSetAccessToken","isTokenLoading","hasBeenAuthenticated","accessToken","e"],"sources":["/Users/israelromero/todoApp/client/src/graphql/hooks/authHooks.js"],"sourcesContent":["import { makeVar, useReactiveVar } from \"@apollo/client\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useEffect, useState } from \"react\";\n\nconst tokenVar = makeVar();\n\nlet isAlreadyGettingToken = false;\n\nexport function useAuth() {\n  const {\n    isAuthenticated: isAuthenticatedAuth0,\n    getAccessTokenSilently,\n    isLoading: isAuthLoading,\n  } = useAuth0();\n  console.log(isAuthenticatedAuth0, isAuthLoading, \"THIS IS BOTH\");\n  const token = useReactiveVar(tokenVar);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    if (isAuthenticatedAuth0) {\n      getAndSetAccessToken({\n        getAccessTokenSilently,\n        setError,\n      });\n    }\n  }, [isAuthenticatedAuth0, getAccessTokenSilently]);\n\n  const isAuthenticated = isAuthenticatedAuth0 && !!token;\n  const isTokenLoading = !isAuthenticated && isAuthenticatedAuth0;\n  const isLoading = isAuthLoading || isTokenLoading;\n\n  return {\n    token,\n    error,\n    isAuthenticated,\n    hasBeenAuthenticated: isAuthenticatedAuth0,\n    isLoading,\n  };\n}\n\nasync function getAndSetAccessToken({ getAccessTokenSilently, setError }) {\n  if (isAlreadyGettingToken) return;\n  isAlreadyGettingToken = true;\n\n  try {\n    const accessToken = await getAccessTokenSilently();\n\n    tokenVar(accessToken);\n  } catch (e) {\n    setError(e);\n  } finally {\n    isAlreadyGettingToken = false;\n  }\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,cAAc,QAAQ,gBAAgB;AACxD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGL,OAAO,CAAC,CAAC;AAE1B,IAAIM,qBAAqB,GAAG,KAAK;AAEjC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IACJC,eAAe,EAAEC,oBAAoB;IACrCC,sBAAsB;IACtBC,SAAS,EAAEC;EACb,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACdY,OAAO,CAACC,GAAG,CAACL,oBAAoB,EAAEG,aAAa,EAAE,cAAc,CAAC;EAChE,MAAMG,KAAK,GAAGf,cAAc,CAACI,QAAQ,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAIO,oBAAoB,EAAE;MACxBS,oBAAoB,CAAC;QACnBR,sBAAsB;QACtBO;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACR,oBAAoB,EAAEC,sBAAsB,CAAC,CAAC;EAElD,MAAMF,eAAe,GAAGC,oBAAoB,IAAI,CAAC,CAACM,KAAK;EACvD,MAAMI,cAAc,GAAG,CAACX,eAAe,IAAIC,oBAAoB;EAC/D,MAAME,SAAS,GAAGC,aAAa,IAAIO,cAAc;EAEjD,OAAO;IACLJ,KAAK;IACLC,KAAK;IACLR,eAAe;IACfY,oBAAoB,EAAEX,oBAAoB;IAC1CE;EACF,CAAC;AACH;AAACJ,EAAA,CA9BeD,OAAO;EAAA,QAKjBL,QAAQ,EAEED,cAAc;AAAA;AAyB9B,eAAekB,oBAAoBA,CAAC;EAAER,sBAAsB;EAAEO;AAAS,CAAC,EAAE;EACxE,IAAIZ,qBAAqB,EAAE;EAC3BA,qBAAqB,GAAG,IAAI;EAE5B,IAAI;IACF,MAAMgB,WAAW,GAAG,MAAMX,sBAAsB,CAAC,CAAC;IAElDN,QAAQ,CAACiB,WAAW,CAAC;EACvB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVL,QAAQ,CAACK,CAAC,CAAC;EACb,CAAC,SAAS;IACRjB,qBAAqB,GAAG,KAAK;EAC/B;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}